datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/@prisma/mongodb"
}

model User {
  mongo_id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  id                             Int     @unique
  login                          String  @unique
  role                           String  @default("user")
  password                       String
  email                          String  @unique
  authenticatorCode              String? @map("authenticator_code")
  phoneNumber                    String? @map("phone_number")
  enabledTwoFactorAuthentication String  @default("application") @map("enabled_two_factor_authentication")
  lockerNumber                   Int?    @unique @map("locker_number")
  lockerPin                      Int?    @map("locker_pin")
  posts                          Post[]

  @@map("users")
}

model Page {
  mongo_id String            @id @default(auto()) @map("_id") @db.ObjectId
  name     String            @unique
  title    String
  content  PageContentItem[]

  @@map("pages")
}

model PageContentItem {
  mongo_id String @id @default(auto()) @map("_id") @db.ObjectId
  id       Int    @unique
  content  String
  runtime  String
  Page     Page?  @relation(fields: [pageName], references: [name])
  pageName String @map("page_name")

  @@map("pages_content_items")
}

model Post {
  mongo_id String            @id @default(auto()) @map("_id") @db.ObjectId
  id       Int               @unique
  title    String
  brief    String
  author   User              @relation(fields: [authorId], references: [id])
  authorId Int               @map("author_id")
  content  PostContentItem[]

  @@map("posts")
}

model PostContentItem {
  mongo_id String @id @default(auto()) @map("_id") @db.ObjectId
  id       Int    @unique
  content  String
  runtime  String
  Post     Post?  @relation(fields: [postId], references: [id])
  postId   Int    @map("post_id")

  @@map("posts_content_items")
}
